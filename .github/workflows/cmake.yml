name: CMake

on: [push]

jobs:
  # look into the cache, if the latest MUQ build is cached, load the cache, otherwise build new cache.
  # upload MUQ build into artifact to be picked up by the next job.
  install-muq:
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout MUQ
        id: checkout-muq
        run: |
            cd ${{ runner.workspace }}
            mkdir opt
            git clone https://github.com/sebwolf-de/MUQ
            cd MUQ
            git checkout fused-simulations
            echo "muq-id=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Cache MUQ
        id: cache-muq
        uses: actions/cache@v3
        with:
          path: ${{ runner.workspace }}/opt
          key: ${{ steps.checkout-muq.outputs.muq-id }}

      - if: ${{ steps.cache-muq.outputs.cache-hit != 'true' }}
        name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -qq libeigen3-dev libhdf5-dev libboost-filesystem-dev libboost-dev libboost-graph-dev libyaml-cpp-dev libopenmpi-dev doxygen libnlopt-dev libspdlog-dev otf-trace

      - if: ${{ steps.cache-muq.outputs.cache-hit != 'true' }}
        name: Install MUQ
        run: |
            cd ${{ runner.workspace }}/MUQ
            ls -la
            cd build
            git checkout fused-simulations
            cmake .. -DCMAKE_INSTALL_PREFIX=${{ runner.workspace }}/opt -DMUQ_USE_MPI=ON
            make install -j $(nproc) 

      - name: Upload MUQ
        uses: actions/upload-artifact@v3
        with:
          name: muq
          path: ${{ runner.workspace }}/opt
  
  # Build UQ-SeisSol in Release and Debug version
  build-uq-seissol:
    runs-on: ubuntu-latest
    needs: install-muq
  
    strategy:
      matrix:
        build_type: ["Release", "Debug", "ALL_WARNINGS"]
  
    steps: 
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get -qq install python3 libeigen3-dev libhdf5-dev libboost-filesystem-dev libboost-dev libboost-graph-dev libyaml-cpp-dev libopenmpi-dev doxygen libnlopt-dev libspdlog-dev otf-trace clang-tidy

      - name: Download MUQ
        uses: actions/download-artifact@v3
        with:
          name: muq
          path: ${{ runner.workspace }}/opt
  
      - name: Configure UQ-SeisSol
        working-directory: ${{ github.workspace }}
        run: |
          mkdir build_${{ matrix.build_type}} && cd build_${{ matrix.build_type}}
          cmake .. -DCMAKE_CXX_FLAGS_ALL_WARNINGS:STRING="-Wall -Wextra -Wpedantic -Werror" -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_PREFIX_PATH=${{ runner.workspace }}/opt -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
  
      - name: Build
        working-directory: ${{ github.workspace }}/build_${{ matrix.build_type }}
        run: cmake --build . -j $(nproc)
  
      - name: clang-tidy
        working-directory: ${{ github.workspace }}/build_${{ matrix.build_type }}
        continue-on-error: true
        run: |
          python ${{ github.workspace }}/utilities/run-clang-tidy.py -header-filter=../src
  
